// <auto-generated />
using System;
using Catalog.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Catalog.Repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Catalog.Core.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 5, 20, 21, 45, 51, 556, DateTimeKind.Utc).AddTicks(3087),
                            Name = "React"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 5, 20, 21, 45, 51, 556, DateTimeKind.Utc).AddTicks(3089),
                            Name = ".Net Core"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 5, 20, 21, 45, 51, 556, DateTimeKind.Utc).AddTicks(3090),
                            Name = "EF Core"
                        });
                });

            modelBuilder.Entity("Catalog.Core.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Picture")
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2024, 5, 20, 21, 45, 51, 556, DateTimeKind.Utc).AddTicks(3396),
                            Description = "Harika bir kurs",
                            Name = "Ugulamalı React Kursu",
                            Picture = "react.img",
                            Price = 156m,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2024, 5, 20, 21, 45, 51, 556, DateTimeKind.Utc).AddTicks(3399),
                            Description = "Harika bir kurs",
                            Name = "Ugulamalı Dotnet Kursu",
                            Picture = "dotnet.img",
                            Price = 256m,
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2024, 5, 20, 21, 45, 51, 556, DateTimeKind.Utc).AddTicks(3400),
                            Description = "Harika bir kurs",
                            Name = "Modern React Kursu",
                            Picture = "modernReact.img",
                            Price = 300m,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Catalog.Core.Models.CourseFeature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseId")
                        .HasColumnType("integer");

                    b.Property<int>("Duration")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CourseId")
                        .IsUnique();

                    b.ToTable("CourseFeatures");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseId = 1,
                            Duration = 15
                        },
                        new
                        {
                            Id = 2,
                            CourseId = 2,
                            Duration = 20
                        },
                        new
                        {
                            Id = 3,
                            CourseId = 3,
                            Duration = 30
                        });
                });

            modelBuilder.Entity("Catalog.Core.Models.Course", b =>
                {
                    b.HasOne("Catalog.Core.Models.Category", "Category")
                        .WithMany("Courses")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Catalog.Core.Models.CourseFeature", b =>
                {
                    b.HasOne("Catalog.Core.Models.Course", "Course")
                        .WithOne("CourseFeature")
                        .HasForeignKey("Catalog.Core.Models.CourseFeature", "CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("Catalog.Core.Models.Category", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("Catalog.Core.Models.Course", b =>
                {
                    b.Navigation("CourseFeature");
                });
#pragma warning restore 612, 618
        }
    }
}
